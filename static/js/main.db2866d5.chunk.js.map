{"version":3,"sources":["js/helpers/Globals.js","js/functions/PlayIcon.js","js/classes/PaintStroke.js","audio/splatter-no-1.ogg","audio/splatter-no-1.mid","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["window","p5","PlayIcon","id","className","xmlns","height","viewBox","width","d","fill","PaintStroke","canvas","points","duration","fromColour","toColour","this","color","index","lifetime","parseInt","hasInitiated","hasCompleted","numOfLoops","diff","x","y","ax","ay","a","r","length","i","stroke","lerpColor","oldR","sqrt","size","oldX","oldY","strokeWeight","line","P5SketchWithAudio","sketchRef","useRef","Sketch","p","splatterCanvas","canvasWidth","innerWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","loadMidi","Midi","fromUrl","midi","then","result","noteSet1","tracks","notes","noteSet2","noteSet3","filter","note","noteSet4","scheduleCueSet","document","getElementById","classList","add","remove","preload","song","loadSound","audio","onended","logCredits","noteSet","callbackName","poly","lastTicks","currentCue","ticks","time","addCue","backgroundColour","strokes","setup","createCanvas","createGraphics","paintStrokeCanvas","colorMode","HSB","background","noLoop","push","generatePoints","draw","isPlaying","image","executeCueSet1","random","divisors","clear","splatter","redraw","strokesIndex","executeCueSet2","delayAmount","paintStroke","setTimeout","executeCueSet3","includes","executeCueSet4","reducer","hue","colour","noFill","beginShape","divisor","curveVertex","Math","cos","sin","endShape","numOfPoints","xMultiplier","yMultiplier","direction","noiseX","noise","noiseY","mousePressed","pause","currentTime","buffer","reset","addClass","play","creditsLogged","console","log","stop","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.db2866d5.chunk.js","sourcesContent":["// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='fade-out' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n    )\n}\n","export default class PaintStroke {\n    constructor(canvas, points, duration, fromColour, toColour) {\n        this.canvas = canvas;\n        this.points = points; \n        this.fromColour = this.canvas.color(fromColour);\n        this.toColour = this.canvas.color(toColour);\n        this.index = 0;\n        this.lifetime = parseInt(duration * 1000);\n        this.hasInitiated = false;\n        this.hasCompleted = false;\n    }\n\n    draw(numOfLoops) {\n        let distance = 10;\n        let spring = 0.5;\n        let friction = 0.5;\n        let size = 25;\n        let diff = size / 8;\n        let x = this.points[0].x,\n            y = this.points[0].y,\n            ax = 0,\n            ay = 0, \n            a = 0,\n            r = 0;\n\n        if(numOfLoops === (this.points.length - 1)) {\n            this.hasCompleted = true;\n        }\n\n        for (let i = 3; i < numOfLoops; i++) {\n            const stroke = this.canvas.lerpColor(this.fromColour, this.toColour, (1 / this.points.length * i) );\n            this.canvas.stroke(stroke);\n            let oldR = r;\n                ax += ( this.points[i].x - x ) * spring;\n                ay += ( this.points[i].y - y ) * spring;\n                ax *= friction; \n                ay *= friction;\n                a += this.canvas.sqrt( ax*ax + ay*ay ) - a;\n                a *= 0.6;\n                r = size * 1 / i - a;\n\n                \n                for(let i = 0; i < distance; ++i ) {\n                    let oldX = x;\n                    let oldY = y;\n                    x += ax / distance;\n                    y += ay / distance;\n                    oldR += ( r - oldR ) / distance;\n                    if(oldR < 1) {\n                        oldR = 1;\n                    }\n                    this.canvas.strokeWeight( oldR + diff );\n                    this.canvas.line( x, y, oldX, oldY );\n                    this.canvas.strokeWeight( oldR );\n                    this.canvas.line( x+diff*2, y+diff*2, oldX+diff*2, oldY+diff*2 );\n                    this.canvas.line( x-diff, y-diff, oldX-diff, oldY-diff );\n                }\n        }\n    }\n}","export default __webpack_public_path__ + \"static/media/splatter-no-1.e656eb14.ogg\";","export default __webpack_public_path__ + \"static/media/splatter-no-1.e891a07d.mid\";","import React, { useRef, useEffect } from \"react\";\nimport \"./helpers/Globals\";\nimport \"p5/lib/addons/p5.sound\";\nimport * as p5 from \"p5\";\nimport { Midi } from '@tonejs/midi'\nimport PlayIcon from './functions/PlayIcon.js';\nimport PaintStroke from './classes/PaintStroke';\n\nimport audio from \"../audio/splatter-no-1.ogg\";\nimport midi from \"../audio/splatter-no-1.mid\";\n\nconst P5SketchWithAudio = () => {\n    const sketchRef = useRef();\n\n    const Sketch = p => {\n\n        p.canvas = null;\n\n        p.splatterCanvas = null;\n\n        p.canvasWidth = window.innerWidth;\n\n        p.canvasHeight = window.innerHeight;\n\n        p.audioLoaded = false;\n\n        p.player = null;\n\n        p.PPQ = 3840 * 4;\n\n        p.loadMidi = () => {\n            Midi.fromUrl(midi).then(\n                function(result) {\n                    const noteSet1 = result.tracks[5].notes; // Thor 2 Copy - Comsmo Bass 2\n                    const noteSet2 = result.tracks[9].notes; // Thor 2 Copy - Super Velo Brass\n                    const noteSet3 = result.tracks[6].notes.filter(note => note.midi !== 43); // Kong 1 - Sparkle\n                    const noteSet4 = result.tracks[8].notes; // Thor 2 - Anime Melody\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\n                    p.scheduleCueSet(noteSet2, 'executeCueSet2');\n                    p.scheduleCueSet(noteSet3, 'executeCueSet3');\n                    p.scheduleCueSet(noteSet4, 'executeCueSet4');\n                    p.audioLoaded = true;\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\n                }\n            );\n            \n        }\n\n        p.preload = () => {\n            p.song = p.loadSound(audio, p.loadMidi);\n            p.song.onended(p.logCredits);\n        }\n\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\n            let lastTicks = -1,\n                currentCue = 1;\n            for (let i = 0; i < noteSet.length; i++) {\n                const note = noteSet[i],\n                    { ticks, time } = note;\n                if(ticks !== lastTicks || poly){\n                    note.currentCue = currentCue;\n                    p.song.addCue(time, p[callbackName], note);\n                    lastTicks = ticks;\n                    currentCue++;\n                }\n            }\n        } \n\n        p.backgroundColour = 0;\n\n        p.strokes = [];\n\n        p.setup = () => {\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.splatterCanvas = p.createGraphics(p.canvasWidth, p.canvasHeight);\n            p.paintStrokeCanvas = p.createGraphics(p.canvasWidth, p.canvasHeight);\n            p.colorMode(p.HSB);\n            p.background(p.backgroundColour);\n            p.noLoop();\n\n            for (let i = 0; i < 66; i++) {\n                p.strokes.push(\n                    {\n                        points: p.generatePoints()\n                    }\n                );\n            }\n        }\n\n        p.draw = () => {\n            if(p.audioLoaded && p.song.isPlaying()){\n                p.background(p.backgroundColour);\n                p.image(p.splatterCanvas, 0, 0);\n                p.image(p.paintStrokeCanvas, 0, 0);\n            }\n        }\n\n        p.executeCueSet1 = (note) => {\n            const { currentCue } = note, \n                x = p.random(0, p.width),\n                y = p.random(0, p.height),\n                divisors = [];\n            if(currentCue < 152) {\n                if (currentCue % 23 === 1) {\n                    p.splatterCanvas.clear();\n                }\n\n\n                for (let i = 0; i < 1080; i++) {\n                    divisors.push(p.random(2,200));\n                }\n                p.splatter(\n                    x, \n                    y, \n                    p.random(p.height / 4, p.height / 8), \n                    divisors, \n                    p.color(p.random(0, 360), 100, 100)\n                );\n                p.redraw();\n            }\n        }\n\n        p.strokesIndex = 0;\n\n        p.executeCueSet2 = (note) => {\n            const { currentCue, duration } = note,\n                points = p.strokes[p.strokesIndex].points,\n                delayAmount = duration * 1000 / points.length,\n                paintStroke = new PaintStroke(\n                    p.paintStrokeCanvas,\n                    p.strokes[p.strokesIndex].points,\n                    duration,\n                    p.color(p.random(360), 100, 100),\n                    p.color(p.random(360), 100, 100)\n                );\n\n            if (currentCue % 11 === 1) {\n                p.paintStrokeCanvas.clear();\n            }\n\n            for (let i = 0; i < points.length; i++) {\n                setTimeout(\n                    function () {\n                        paintStroke.draw(i);\n                        p.redraw();\n                    },\n                    (delayAmount * i)\n                );\n            }\n            p.strokesIndex++;\n        }\n        \n        p.executeCueSet3 = (note) => {\n            const { currentCue, ticks } = note;\n            if((ticks / p.PPQ) % 4 === 2) {\n                p.backgroundColour = p.color(\n                    p.random(360), \n                    p.random(100), \n                    p.random(100)\n                );\n            }\n            p.redraw();\n            if([1, 21, 51].includes(currentCue)){\n                p.backgroundColour = p.color(0, 0, 100);\n                p.clear();\n                p.splatterCanvas.clear();\n                p.paintStrokeCanvas.clear();\n            }\n        }\n\n        p.executeCueSet4 = (note) => {\n            const { currentCue } = note, \n                x = p.random(0, p.width),\n                y = p.random(0, p.height),\n                divisors = [];\n\n            if (currentCue % 23 === 1) {\n                p.splatterCanvas.clear();\n            }\n\n            for (let i = 0; i < 1080; i++) {\n                divisors.push(p.random(2,200));\n            }\n\n            let size = p.random(p.height / 4, p.height / 6), \n                reducer = size / 12, \n                hue = p.random(0, 360);\n\n            for (let i = 0; i < 12; i++) {\n                p.splatter(x, y, size, divisors, p.color(hue, 100, 100), true);\n                size = size - reducer;\n                hue = hue + 15 >= 360 ? hue - 340 : hue + 15;\n            }\n            p.redraw();\n        }\n\n        p.splatter = (x, y, size, divisors, colour, fill = false) => {\n            p.splatterCanvas.strokeWeight(1);\n            p.splatterCanvas.stroke(colour);\n            if(fill) {\n                p.splatterCanvas.fill(colour);\n            }\n            else {\n                p.splatterCanvas.noFill();\n            }\n            p.splatterCanvas.beginShape();\n            for (let i = 0; i < 1080; i++) {\n                const divisor = divisors[i];\n                \n                p.splatterCanvas.curveVertex(\n                    x + size * Math.cos(i) / divisor, \n                    y + size * Math.sin(i) / divisor\n                );\n            }\n            p.splatterCanvas.endShape();\n        }\n\n        p.generatePoints = () => {\n            const points = [],\n                numOfPoints = p.random(30, 40),\n                xMultiplier = p.random(0, 20),\n                yMultiplier = p.random(0, 20),\n                direction = p.random(['left','right','up','down']);\n\n            let x = p.random(0, p.width),\n                y = p.random(0, p.height);\n            points.push(\n                {\n                    \"x\":x,\n                    \"y\":y\n                }\n            );\n\n            for (let i = 0; i < numOfPoints; i++) {\n                const noiseX = p.noise(i, 0) * xMultiplier;\n                const noiseY = p.noise(0, i) * yMultiplier;\n                switch (direction) {\n                    case 'left':\n                        x = x - noiseX;\n                        y = y - noiseY;\n                        break;\n                    case 'right':\n                        x = x + noiseX;\n                        y = y + noiseY;\n                        break;\n                    case 'up':\n                        x = x + noiseX;\n                        y = y - noiseY;\n                        break;\n                    case 'down':\n                        x = x - noiseX;\n                        y = y + noiseY;\n                        break;\n                    default:\n                        break;\n                }\n                \n                points.push(\n                    {\n                        \"x\":x,\n                        \"y\":y\n                    }\n                );\n            }\n            return points;\n        }\n\n        p.mousePressed = () => {\n            if(p.audioLoaded){\n                if (p.song.isPlaying()) {\n                    p.song.pause();\n                } else {\n                    if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\n                        p.reset();\n                    }\n                    document.getElementById(\"play-icon\").classList.add(\"fade-out\");\n                    p.canvas.addClass(\"fade-in\");\n                    p.song.play();\n                }\n            }\n        }\n\n        p.creditsLogged = false;\n\n        p.logCredits = () => {\n            if (\n                !p.creditsLogged &&\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\n            ) {\n                p.creditsLogged = true;\n                    console.log(\n                    \"Music By: http://labcat.nz/\",\n                    \"\\n\",\n                    \"Animation By: https://github.com/LABCAT/\"\n                );\n                p.song.stop();\n            }\n        };\n\n        p.reset = () => {\n\n        }\n\n        p.updateCanvasDimensions = () => {\n            p.canvasWidth = window.innerWidth;\n            p.canvasHeight = window.innerHeight;\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent(\n                'onresize',\n                function () {\n                    p.updateCanvasDimensions();\n                }\n            );\n        }\n        else if (window.addEventListener) {\n            window.addEventListener(\n                'resize',\n                function () {\n                    p.updateCanvasDimensions();\n                },\n                true\n            );\n        }\n        else {\n            //The browser does not support Javascript event binding\n        }\n    };\n\n    useEffect(() => {\n        new p5(Sketch, sketchRef.current);\n    }, []);\n\n    return (\n        <div ref={sketchRef}>\n            <PlayIcon />\n        </div>\n    );\n};\n\nexport default P5SketchWithAudio;\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}